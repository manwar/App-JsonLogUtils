#!perl
# ABSTRACT: transforms JSON into tabular fields suitable for column
# PODNAME: jcols

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use App::JsonLogUtils::Iter;
use App::JsonLogUtils::Log;

my $help = 0;
my $cols = '';
my $sep  = "\t";

GetOptions(
  'help'   => \$help,
  'sep=s'  => \$sep,
  'cols=s' => \$cols,
) or pod2usage(2);

if ($help) {
  pod2usage(1);
  exit 0;
}

$| = 1;

my @cols = split /\s+/, $cols;

sub run {
  my $lines = ijson icat shift;

  while (my ($line, $obj, $err) = <$lines>) {
    if ($err) {
      log_info $err;
    } else {
      print join($sep, map{ $obj->{$_} || '' } @cols), "\n";
    }
  }
}

if (@cols) {
  print join($sep, @cols), "\n";
}

if (@ARGV) {
  run $_ foreach @ARGV;
} else {
  run \*STDIN;
}

exit 0;

=head1 SYNOPSIS

  jcols --cols "field1 field2 field3 ..." [--sep "|"] [/path/to/file1 /path/to/file2 ...]

=head1 DESCRIPTION

Outputs JSON object fields in a format suitable for C<column>.

=head1 OPTIONS

=head2 --cols

Space-separated list of fields to include in output. The first line of output will be the
list of fields, separated by L</--sep>.

=head2 --sep

Optional separator string between columns. Defaults to a single tab.

=cut
